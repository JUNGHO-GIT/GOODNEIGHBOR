<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="notice">

	<!-- 1. 전체 게시글 수 -->
	<select id="getCount" resultType="Integer">
		select count(*)
    from notice
	</select>

	<!-- 2. 최대 글번호 얻기 -->
	<select id="getMax" resultType="Integer">
		select NVL (
      max(notice_number
    ), 0)
    from notice
	</select>

	<!-- 3. 글쓰기 -->
	<insert id="getInsert" parameterType="noticeDTO">
		insert into notice (
      notice_number, notice_writer, notice_pw, notice_title, notice_content, notice_regdate, notice_group, notice_step,notice_level
    )
    values (
      #{notice_number}, #{notice_writer, jdbcType=VARCHAR}, #{notice_pw}, #{notice_title}, #{notice_content}, SYSDATE, #{notice_group}, #{notice_step}, #{notice_level}
    )
	</insert>

	<!-- 4. 글번호 업데이트 -->
	<update id="getUpdateStep" parameterType="noticeDTO">
		update notice
    set notice_step = notice_step + 1
    where notice_group = #{notice_group} and notice_step <![CDATA[>]]> #{notice_step}
	</update>

	<!-- 5. 전체 게시글 목록 -->
	<select id="getList" parameterType="java.util.Map" resultType="noticeDTO">
    select * from (
      select n.*, ROWNUM rnum
      from (
        select * from notice
        order by notice_group desc, notice_step asc
      ) n where ROWNUM <![CDATA[<=]]> #{start} + #{count}
    )
    where rnum <![CDATA[>]]> #{start}
  </select>

	<!-- 5-1. 검색 게시글 수 -->
  <select id="getSearchCount" parameterType="java.util.Map" resultType="Integer">
    SELECT COUNT(*) FROM notice
    WHERE ${columnParam} LIKE '%' || #{keyWord} || '%'
  </select>

  <!-- 5-2. 검색 게시글 목록 -->
  <select id="getSearch" parameterType="java.util.Map" resultType="noticeDTO">
    SELECT *
    FROM (
      SELECT notice.*, ROWNUM rnum
      FROM (
        SELECT *
        FROM notice
        WHERE notice_fix = 0 AND ${columnParam} LIKE '%' || #{keyWord} || '%'
        ORDER BY notice_number DESC
      ) notice
      WHERE ROWNUM <![CDATA[<=]]> #{start} + #{count}
    )
    WHERE rnum <![CDATA[>]]> #{start}
  </select>

	<!-- 6. 글번호 조회수 증가 -->
	<update id="getUpdateCount" parameterType="int">
		update notice
    set notice_readcount = notice_readcount + 1
    where notice_number = #{notice_number}
	</update>

	<!-- 7. 글번호에 해당하는 게시글 정보 -->
	<select id="getDetails" parameterType="int" resultType="noticeDTO">
		select *
    from notice
    where notice_number = #{notice_number}
	</select>

	<!-- 8. 게시물 수정 -->
	<update id="getUpdate" parameterType="noticeDTO">
		update notice
    set notice_writer = #{notice_writer, jdbcType=VARCHAR}, notice_title = #{notice_title}, notice_content = #{notice_content}
    where notice_number = #{notice_number} and notice_pw = #{notice_pw}
	</update>

	<!-- 9. 게시물 삭제 -->
	<delete id="getDelete" parameterType="int">
		delete from notice
    where notice_number = #{notice_number}
	</delete>

  <!-- 10. 공지사항 고정 -->
	<insert id="getFixTop" parameterType="noticeDTO">
		insert into notice (
      notice_number, notice_writer, notice_title, notice_content, notice_regdate, notice_fix
    )
    values (
      0, #{notice_writer, jdbcType=VARCHAR}, #{notice_title}, #{notice_content}, SYSDATE, 1
    )
	</insert>

  <!-- 11. 공지사항 고정 글번호 얻기 -->
	<select id="getFixNumber" resultType="noticeDTO">
    select * from (
      select notice.*, rownum rnum from (
        select * from notice
        where notice_fix = 1 order by notice_regdate desc
      ) notice where rownum <![CDATA[<=]]> 3
    ) where rnum <![CDATA[>]]> 0
  </select>

  <!-- 12. 공지사항 고정 글번호 조회수 증가 -->
	<update id="getFixModify" parameterType="Integer">
		update notice set
    notice_title=#{notice_title},notice_content=#{notice_content}, notice_fix=1
    where
    notice_number=#{notice_number}
	</update>

</mapper>